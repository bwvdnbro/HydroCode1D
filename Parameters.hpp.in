/*******************************************************************************
 * This file is part of HydroCode1D
 * Copyright (C) 2017 Bert Vandenbroucke (bert.vandenbroucke@gmail.com)
 *               2018 Bert Vandenbroucke (bert.vandenbroucke@gmail.com)
 *
 * HydroCode1D is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * HydroCode1D is distributed in the hope that it will be useful,
 * but WITOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with HydroCode1D. If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/

/**
 * @file Parameters.hpp
 *
 * @brief Simulation parameters. All these parameters are configured
 * automatically by CMake. Please don't touch this file!
 *
 * @author Bert Vandenbroucke (bv7@st-andrews.ac.uk)
 */
#ifndef PARAMETERS_HPP
#define PARAMETERS_HPP

#ifndef SAFEPARAMETERS_HPP
#error "This file should never be included directly! "                         \
       "Instead include SafeParameters.hpp!"
#endif

#include <string>

/*! @brief Minimum radius (in AU; set by the configuration). */
#define RMIN_IN_M (@rmin_in_m@)

/*! @brief Maximum radius (in AU; set by the configuration). */
#define RMAX_IN_M (@rmax_in_m@)

/*! @brief Default number of spherical shells (1D "cells") in between RMIN and
 *  RMAX (set by configuration). Can be overwritten by a command line
 *  parameter. */
#define NCELL (@ncell@)

/*! @brief Polytropic index (set by the configuration). */
#define GAMMA (@gamma@)

/*! @brief Maximum simulation time (in years; set by the configuration). */
#define MAXTIME_IN_S (@maxtime_in_s@)

/*! @brief Number of snapshots to write during the simulation (set by the
 *  configuration). */
#define NUMBER_OF_SNAPS (@number_of_snaps@)

/*! @brief Choice of boundary conditions (set by the configuration). */
#define BOUNDARIES @boundaries@

/*! @brief Choice of equation of state (set by the configuration). */
#define EOS @eos@

/*! @brief Constant temperature in the neutral region (in K; set by the
 *  configuration). */
#define ISOTHERMAL_TEMPERATURE_IN_K (@isothermal_temperature_in_k@)

/*! @brief Choice of external potential (set by the configuration). */
#define POTENTIAL @potential@

/*! @brief Value for Newton's gravity constant (in internal units of L^3 M^-1
 *  T^-2; set by the configuration). */
#define G_INTERNAL (@g_internal@)

/*! @brief Mass of the point mass (if POTENTIAL_POINT_MASS is selected; in
 *  solar masses; set by the configuration). */
#define MASS_POINT_MASS_IN_KG (@mass_point_mass_in_kg@)

/*! @brief Courant factor for the time step criterion. */
#define COURANT_FACTOR (@courant_factor@)

/*! @brief Type of Riemann solver to use (set by the configuration). */
#define RIEMANNSOLVER_TYPE @riemannsolver_type@

/*! @brief Dimensionality (set by the configuration). */
#define DIMENSIONALITY @dimensionality@

/*! @brief Hydro integration scheme order (set by the configuration). */
#define HYDRO_ORDER @hydro_order@

/*! @brief Number of configuration options. */
#define CONFIGURATION_NUMBER (@CONFIGURATION_NUMBER@)

/*! @brief Configuration keys (for output). */
extern const std::string configuration_keys[CONFIGURATION_NUMBER];
/*! @brief Configuration values (for output). */
extern const std::string configuration_values[CONFIGURATION_NUMBER];

/*! @brief Git describe string (for output). */
extern const char git_info[];

#endif // PARAMETERS_HPP
